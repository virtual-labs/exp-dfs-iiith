{
    "version": 1,
    "experiment name": "Experiment Name",
    "problems": [
        {
            "problem name": "Basic Depth First Search",
            "description": "You are given the list of edges of a directed graph and the root node. Perform depth first search to find the correct order of visitation of nodes. You are advised to first construct a graph from the edge list then proceed further.",
            "inputs": [
                [[1,2], [2,3], [1,4], [4,5], [4,6]],
                1
            ],
            "expected": [1,2,3,4,5,6],
            "inputs description": "Input consists of an array of edges as [node1, node2]. For node1 as parent, The first of the edges denote the edge with the left child, other latter edge with the right child.",
            "expected description": "An array of nodes in the correct order of visitation",
            "difficulty": "beginner"
        },
        {
            "problem name": "Detect Cycle in Directed Graph",
            "description": "Implement DFS to detect cycles in a directed graph.",
            "inputs": [
                [
                    [0, 1],
                    [0, 2],
                    [1, 2],
                    [2, 0],
                    [2, 3],
                    [3, 3]
                ],
                0
            ],
            "expected": true,
            "inputs description": "Input consists of a directed graph represented as an array of edges, where each edge [parent, child] denotes a directed connection from parent to child, and a starting vertex.",
            "expected description": "Boolean indicating whether the graph contains a cycle.",
            "difficulty": "beginner"
        }
    ]
}